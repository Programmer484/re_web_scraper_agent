version: '3.8'

services:
  property-agent:
    build: 
      context: ..
      dockerfile: infra/Dockerfile
    container_name: property-scraper-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    env_file:
      - ../.env
    volumes:
      # Mount logs directory
      - ../data/logs:/app/logs
    restart: unless-stopped
    networks:
      - property-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    profiles:
      - production
    command: ["uvicorn", "api_server:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "info", "--access-log", "--timeout-keep-alive", "65"]

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: property-cache
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - property-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: property-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - property-agent
    restart: unless-stopped
    networks:
      - property-net
    profiles:
      - production

networks:
  property-net:
    driver: bridge

volumes:
  redis_data: 