version: '3.8'

services:
  property-agent:
    build: 
      context: .
      target: ${BUILD_TARGET:-production}
    container_name: property-scraper-api
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - APIFY_TOKEN=${APIFY_TOKEN}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - /app/node_modules  # Prevent overwriting if any
    restart: unless-stopped
    networks:
      - property-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Add logging configuration for better debugging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: property-cache
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - property-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: property-proxy
    ports:
      - "${PROXY_PORT:-80}:80"
      - "${PROXY_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  # For SSL certificates
    depends_on:
      property-agent:
        condition: service_healthy
    networks:
      - property-net
    restart: unless-stopped
    profiles: ["production"]

networks:
  property-net:
    driver: bridge

volumes:
  redis_data: 